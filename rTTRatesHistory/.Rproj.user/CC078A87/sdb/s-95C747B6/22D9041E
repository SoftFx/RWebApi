{
    "collab_server" : "",
    "contents" : "GetBarFromWeb <- function(server, symbol, barsType, periodicity, startTimeMs, count){\n  querryInit <- paste(\"https://\", server,\"/api/v1/public/quotehistory\",symbol, periodicity, \"bars\", barsType, sep= \"/\")\n  querry <- paste0(querryInit,\"?\",\"timestamp=\",startTimeMs,\"&count=\", count)\n  connect <- GET(querry)\n  if(connect$status_code != 200) {\n    stop(paste(\"status_code is not OK\", connect$status_code))\n  }\n  data <- content(connect, \"text\", encoding = \"UTF-8\")\n  bars <- fromJSON(data)\n  bars <- as.data.table(bars$Bars)\n  return(bars)\n}\n\nGetTicksFromWeb <- function(server, symbol, startTimeMs, count){\n  querryInit <- paste(\"https://\", server,\"/api/v1/public/quotehistory\",symbol, \"ticks\", sep= \"/\")\n  querry <- paste0(querryInit,\"?\",\"timestamp=\",startTimeMs,\"&count=\", count)\n  connect <- httr::GET(querry)\n  if(connect$status_code != 200) {\n    stop(paste(\"status_code is not OK\", connect$status_code))\n  }\n  data <- content(connect, \"text\", encoding = \"UTF-8\")\n  ticks <- fromJSON(data)\n  ticks <- ticks$Ticks\n  ticks <- data.table(\"Timestamp\" = ticks$Timestamp, \"BidPrice\" = ticks$BestBid$Price,\n                      \"BidVolume\" = ticks$BestBid$Volume, \"BidType\" = ticks$BestBid$Type,  \"AskPrice\" = ticks$BestAsk$Price,\n                      \"AskVolume\" = ticks$BestAsk$Volume, \"AskType\" = ticks$BestAsk$Type)\n  return(ticks)\n}\n\nGetSymbolsInfoFromWeb <- function(server){\n  querry = paste0(\"https://\", server, \"/api/v1/public/symbol\")\n  connect = httr::GET(querry)\n  if(connect$status_code != 200) {\n    stop(paste(\"status_code is not OK\", connect$status_code))\n  }\n  data = content(connect, \"text\", encoding = \"UTF-8\")\n  data = fromJSON(data)\n  symbols <- as.data.table(data)\n  setkey(symbols, \"Symbol\")\n  return(symbols)\n}\n\nGetCurrentQuotesFromWeb <- function(server) {\n  querry <-  paste0(\"https://\", server,\"/api/v1/public/tick\")\n  connect <- httr::GET(querry)\n  if(connect$status_code != 200) {\n    stop(paste(\"status_code is not OK\", connect$status_code))\n  }\n  data <- content(connect, \"text\", encoding = \"UTF-8\")\n  ticks <- fromJSON(data)\n  ticks <- data.table(\"TimeStamp\" = ticks$Timestamp, \"Symbol\" = ticks$Symbol, \"BidPrice\" = ticks$BestBid$Price,\n                      \"BidVolume\" = ticks$BestBid$Volume, \"BidType\" = ticks$BestBid$Type,  \"AskPrice\" = ticks$BestAsk$Price,\n                      \"AskVolume\" = ticks$BestAsk$Volume, \"AskType\" = ticks$BestAsk$Type)\n\n  setkey(ticks, Symbol)\n  return(ticks)\n}\n",
    "created" : 1545405481472.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2631204819",
    "id" : "22D9041E",
    "lastKnownWriteTime" : 1545405498,
    "last_content_update" : 1545405498420,
    "path" : "~/rTTRatesHistory/R/rWebBridge.R",
    "project_path" : "R/rWebBridge.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}